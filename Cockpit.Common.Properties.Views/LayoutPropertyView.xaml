<UserControl x:Class="Cockpit.Common.Properties.Views.LayoutPropertyView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:system="clr-namespace:System;assembly=mscorlib"
    xmlns:pe="clr-namespace:Cockpit.Common.Properties.Views"
    xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
    xmlns:cal="http://www.caliburnproject.org"             
    mc:Ignorable="d" Height="Auto" d:DesignWidth="180" >
    
    <UserControl.Resources>
        <Style TargetType="{x:Type TextBox}">
            <Setter Property="Validation.ErrorTemplate">
                <Setter.Value>
                    <ControlTemplate>
                        <DockPanel LastChildFill="True">
                            <TextBlock DockPanel.Dock="Right" Foreground="Red" FontSize="12pt"/>
                            <Border BorderBrush="Red" BorderThickness="1">
                                <AdornedElementPlaceholder />
                            </Border>
                        </DockPanel>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="Validation.HasError" Value="true">
                    <Setter Property="ToolTip"
                Value="{Binding RelativeSource={RelativeSource Self}, 
                       Path=(Validation.Errors)[0].ErrorContent}"/>
                </Trigger>
            </Style.Triggers>
        </Style>
    </UserControl.Resources>
    <Grid Background="Transparent" Margin="4">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <Label Grid.Column="0" Grid.Row="0" FontSize="10" HorizontalAlignment="Right" Content="Name" />
        <TextBox Grid.Column="1" Grid.Row="0" FontSize="10" Margin="2" Text="{Binding NameUC, ValidatesOnDataErrors=True}" 
                 cal:Message.Attach="[Event GotFocus]=[Action GotFocus($source, $eventArgs)];[Event LostFocus]=[Action LostFocus($source, $eventArgs)]" />
        <Label Grid.Column="0" Grid.Row="1" FontSize="10" HorizontalAlignment="Right" Content="Left"/>
        <xctk:IntegerUpDown Grid.Column="1" Grid.Row="1" FontSize="10" Value="{Binding Path=RealUCLeft, Mode=TwoWay}" Margin="2" TextAlignment="Left"/>
        <!--Text="{Binding Path=UCLeft, Mode=TwoWay}"-->
        <Label Grid.Column="0" Grid.Row="2" FontSize="10" HorizontalAlignment="Right" Content="Top"/>
        <xctk:IntegerUpDown Grid.Column="1" Grid.Row="2" FontSize="10" Value="{Binding Path=RealUCTop, Mode=TwoWay}" Margin="2" TextAlignment="Left"/>
        <DockPanel Grid.Column="0" Grid.Row="3" Grid.ColumnSpan="2" >
            <Grid DockPanel.Dock="Left" Width="25" Height="30" cal:Message.Attach="[Event MouseLeftButtonDown] = [Action ChangeImage('True')]">
                <Image x:Name="ImageUnlocker" Source="{StaticResource Unlocker}" Stretch="Uniform" >
                    <Image.Style>
                        <Style TargetType="{x:Type Image}">
                            <Setter Property="Visibility" Value="Hidden" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Linked}" Value="False">
                                    <Setter Property="Visibility" Value="Visible" />
                                    <Setter Property="ToolTip" Value="Width and Height are not linked - Click to link"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Image.Style>
                </Image>

                <Image x:Name="ImageLocker" Source="{StaticResource Locker}" Stretch="Uniform">
                    <Image.Style>
                        <Style TargetType="{x:Type Image}">
                            <Setter Property="Visibility" Value="Hidden" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Linked}" Value="True">
                                    <Setter Property="Visibility" Value="Visible" />
                                    <Setter Property="ToolTip" Value="Width and Height are linked - Click to cut"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Image.Style>
                </Image>
            </Grid>
            <Grid DockPanel.Dock="Right" Width="25" Height="30" cal:Message.Attach="[Event MouseLeftButtonDown] = [Action ChangeImage('False')]">
                <Image x:Name="Pixel" Source="{StaticResource Px128x128}" Stretch="Uniform">
                    <Image.Style>
                        <Style TargetType="{x:Type Image}">
                            <Setter Property="Visibility" Value="Hidden" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding PxPct}" Value="True">
                                    <Setter Property="Visibility" Value="Visible" />
                                    <Setter Property="ToolTip" Value="Values in Pixels"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Image.Style>
                </Image>
                <Image x:Name="Pourcent" Source="{StaticResource Pct128x128}" Stretch="Uniform" >
                    <Image.Style>
                        <Style TargetType="{x:Type Image}">
                            <Setter Property="Visibility" Value="Hidden" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding PxPct}" Value="False">
                                    <Setter Property="Visibility" Value="Visible" />
                                    <Setter Property="ToolTip" Value="Values in Percent"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Image.Style>
                </Image>
            </Grid>
            <StackPanel>
                <Label  FontSize="10"  Content="Width"/>
                <Label FontSize="10" Content="Height"/>
            </StackPanel >
            <Grid>
                <StackPanel x:Name="Px">
                    <xctk:IntegerUpDown x:Name="WidthPx" Value="{Binding Path=RealWidth, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Margin="2" TextAlignment="Left"
                                    Minimum="0" FontSize="10"
                                    cal:Message.Attach = "[Event LostFocus] = [Action WHHaveFocus($source)];[Event ValueChanged]=[Action ValueChanged(0, $eventArgs)]" />
                    <xctk:IntegerUpDown x:Name="HeightPx" Value="{Binding Path=RealHeight, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Margin="2" TextAlignment="Left"
                                    Minimum="0" FontSize="10"
                                    cal:Message.Attach = "[Event LostFocus] = [Action WHHaveFocus($source)];[Event ValueChanged]=[Action ValueChanged(2, $eventArgs)]" />
                </StackPanel>
            <StackPanel x:Name="Pct">
                    <xctk:DoubleUpDown x:Name="WidthPct" Value="{Binding Path=RealScaleX, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Margin="2" TextAlignment="Left" Increment="0.01" FormatString="P0"
                                   Minimum="0" FontSize="10" Visibility="{Binding ElementName=Pourcent, Path=Visibility}"
                                   cal:Message.Attach = "[Event LostFocus] = [Action WHHaveFocus($source)];[Event ValueChanged]=[Action ValueChanged(1, $eventArgs)]" />
                    <xctk:DoubleUpDown x:Name="HeightPct" Value="{Binding Path=RealScaleY, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Margin="2" TextAlignment="Left" Increment="0.01" FormatString="P0"
                                   Minimum="0" FontSize="10" Visibility="{Binding ElementName=Pourcent, Path=Visibility}"
                                   cal:Message.Attach = "[Event LostFocus] = [Action WHHaveFocus($source)];[Event ValueChanged]=[Action ValueChanged(3, $eventArgs)]" />
            </StackPanel>
            </Grid>

        </DockPanel>
        <Label Grid.Column="0" Grid.Row="6" FontSize="10" HorizontalAlignment="Right" Content="Rotation">
            <Label.ToolTip>Rotates display of this control.</Label.ToolTip>
        </Label>
        <ComboBox Grid.Column="1" Grid.Row="6" Margin="2" FontSize="10" HorizontalAlignment="Left" 
                  ItemsSource="{Binding Source={pe:EnumBindingSource {x:Type pe:LayoutRotation}}}" SelectedIndex="{Binding IndexAngle}" />

        <Label Grid.Column="0" Grid.Row="7" FontSize="10" HorizontalAlignment="Right" Content="Hidden">
            <Label.ToolTip>When checked this control will default to being hidden when the profile is loaded or reset.</Label.ToolTip>
        </Label>
        <CheckBox Grid.Column="1" Grid.Row="7" VerticalAlignment="Center" HorizontalAlignment="Left" IsChecked="{Binding Path=IsDefaultHidden}" />
    </Grid>
</UserControl>
